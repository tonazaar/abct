"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var slp_1 = require("./slp");
var axios_1 = require("axios");
var JsonRpcProxyValidator = /** @class */ (function () {
    function JsonRpcProxyValidator(BITBOX, validatorUrl) {
        if (!BITBOX)
            throw Error("Must provide BITBOX instance to class constructor.");
        if (!validatorUrl)
            throw Error("Must provide validatorUrl to class constructor.");
        this.validatorUrl = validatorUrl;
        this.slp = new slp_1.Slp(BITBOX);
    }
    JsonRpcProxyValidator.prototype.isValidSlpTxid = function (txid) {
        return __awaiter(this, void 0, void 0, function () {
            var data, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        data = {
                            jsonrpc: "2.0",
                            id: "slpvalidate",
                            method: "slpvalidate",
                            params: [txid, false, false]
                        };
                        return [4 /*yield*/, axios_1.default({
                                method: "post",
                                url: this.validatorUrl,
                                data: data
                            })];
                    case 1:
                        result = _a.sent();
                        if (result && result.data && result.data.result === "Valid") {
                            return [2 /*return*/, true];
                        }
                        else {
                            return [2 /*return*/, false];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    JsonRpcProxyValidator.prototype.getRawTransactions = function (txid) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new Error("Not implemented.");
            });
        });
    };
    ;
    JsonRpcProxyValidator.prototype.validateSlpTransactions = function (txids) {
        return __awaiter(this, void 0, void 0, function () {
            var validatePromises, validateResults;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        validatePromises = txids.map(function (txid) { return __awaiter(_this, void 0, void 0, function () {
                            var isValid;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.isValidSlpTxid(txid)];
                                    case 1:
                                        isValid = _a.sent();
                                        return [2 /*return*/, isValid ? txid : ''];
                                }
                            });
                        }); });
                        return [4 /*yield*/, axios_1.default.all(validatePromises)];
                    case 1:
                        validateResults = _a.sent();
                        return [2 /*return*/, validateResults.filter(function (result) { return result.length > 0; })];
                }
            });
        });
    };
    return JsonRpcProxyValidator;
}());
exports.JsonRpcProxyValidator = JsonRpcProxyValidator;
//# sourceMappingURL=jsonrpcvalidator.js.map
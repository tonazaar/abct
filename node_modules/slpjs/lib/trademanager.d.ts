/// <reference types="node" />
import { BITBOX } from 'bitbox-sdk';
import { SlpAddressUtxoResult, SlpTransactionDetails } from '..';
import { Slp } from './slp';
import BigNumber from 'bignumber.js';
interface SlpTokenOffer {
    label: string | null;
    isSpent: boolean;
    op_return: string;
    dummyHex: string;
    scriptSig: Buffer;
    token: {
        lockedSatoshis: number;
        qty: BigNumber;
        priceSatoshis: number;
        txid: string;
        vout: number;
        details: SlpTransactionDetails;
    };
    paymentAddress: string;
}
export declare class SlpTradeManager {
    BITBOX: BITBOX;
    slp: Slp;
    private trades;
    constructor(BITBOX: BITBOX);
    private addNewTrade;
    private updateTrade;
    createSlpForBchOffer(utxo: SlpAddressUtxoResult, priceSatoshis: number, paymentAddress: string, label?: string): SlpTokenOffer;
    createSlpForBchPurchase(tokenOffer: SlpTokenOffer, buyerPaymentUtxos: SlpAddressUtxoResult[], buyerAddress: string): any;
    parseTokenOfferFromDummy(dummyHex: string): Promise<SlpTokenOffer>;
}
export {};
